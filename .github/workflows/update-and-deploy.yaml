name: Build and Deploy to Argo CD

on:
  push:
    branches:
      - main
    paths:
      - 'sample-app/**'
      - 'k8s/**'
      - '.github/workflows/update-and-deploy.yaml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: swamyvaditya/sample-app

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: write      # for git commit & push
      packages: write      # for pushing image to GHCR
      #deployments: write   # for ArgoCD deployment
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Extract short SHA
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        run: |
          docker build -t $REGISTRY/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }} ./sample-app
          docker push $REGISTRY/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}

      - name: Update image tag in Kustomize
        run: |
          cd k8s/overlays/dev
          kustomize edit set image $REGISTRY/${{ env.IMAGE_NAME }}=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.sha_short }}

      - name: Commit and push manifest changes
        env:
          PUSH_PAT: ${{ secrets.PUSH_PAT }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git remote set-url origin https://x-access-token:${PUSH_PAT}@github.com/SwamyVaditya/argocd-demo-repo
          git add k8s/overlays/dev/kustomization.yaml
          git commit -m "Update image tag to ${{ steps.vars.outputs.sha_short }}" || echo "No changes to commit"
          git push origin HEAD:main


      - name: Wait for rollout to complete
        run: |
          kubectl rollout status deployment/sample-app -n default --timeout=60s
